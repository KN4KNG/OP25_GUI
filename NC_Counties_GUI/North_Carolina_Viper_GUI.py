#!/usr/bin/python
# -*- coding: utf-8 -*-
#
#  OP25_GUI.py
#
#  2019; Alex Bowman
#  
#  This is free and unencumbered software released into the public domain.
#  
#  Anyone is free to copy, modify, publish, use, compile, sell, or
#  distribute this software, either in source code form or as a compiled
#  binary, for any purpose, commercial or non-commercial, and by any
#  means.
#  
#  In jurisdictions that recognize copyright laws, the author or authors
#  of this software dedicate any and all copyright interest in the
#  software to the public domain. We make this dedication for the benefit
#  of the public at large and to the detriment of our heirs and
#  successors. We intend this dedication to be an overt act of
#  relinquishment in perpetuity of all present and future rights to this
#  software under copyright law.
#  
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
#  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#  OTHER DEALINGS IN THE SOFTWARE.
#  
#  For more information, please refer to <http://unlicense.org/>
import Tkinter as tk
import os
import threading
#Commands
def stopall():
    os.system("pkill -f ./rx.py")
#All 236 NC Viper Sites Button Commands
def CMD_Altamahaw():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alamance/Altamahaw.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cane_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alamance/Cane_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mebane():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.39375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alamance/Mebane.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Barretts_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alexander/Barretts_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Doughton_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.725e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alleghany/Doughton_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Green_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Alleghany/Green_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mc_Farlan_AAA():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Anson/Mc_Farlan_AAA.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wadesboro():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Anson/Wadesboro.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Deep_Gap_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Ashe/Deep_Gap_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Jefferson_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Ashe/Jefferson_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Phoenix_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Ashe/Phoenix_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Rich_Hill():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.20625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Ashe/Rich_Hill.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Beech_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Avery/Beech_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Linville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.70625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Avery/Linville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bath():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.45e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Beaufort/Bath.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chocowinity():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.775e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Beaufort/Chocowinity.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Windsor():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 857.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Bertie/Windsor.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Elizabethtown():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Bladen/Elizabethtown.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Four_County_EMC_Bladenboro():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Bladen/Four_County_EMC_Bladenboro.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lagoon():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 772.78125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Bladen/Lagoon.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bolivia():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 856.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Brunswick/Bolivia.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Southport():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 769.31875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Brunswick/Southport.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Pea_Landing():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Brunswick/Pea_Landing.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Supply():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Brunswick/Supply.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_High_Windy():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Buncombe/High_Windy.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Meadows_Moutain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.7375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Buncombe/Meadows_Moutain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_White_Fawn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 852.9625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Buncombe/White_Fawn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_High_Peak():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.7875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Burke/High_Peak.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Concord():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.95625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cabarrus/Concord.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Butte_Moutain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 852.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Caldwell/Butte_Moutain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Hibriten_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.325e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Caldwell/Hibriten_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_South_Mills():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Camden/South_Mills.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kuhns_PE():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.85e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Carteret/Kuhns_PE.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Laurel_Road():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Carteret/Laurel_Road.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Newport():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Carteret/Newport.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Stacy():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Carteret/Stacy.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Pelham():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.4375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Caswell/Pelham.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Yanceyville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Caswell/Yanceyville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Anderson_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.73125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Catawba/Anderson_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Baker_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.74375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Catawba/Baker_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_River_Bend_Rd():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Catawba/River_Bend_Rd.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chatham_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Chatham/Chatham_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Siler_City():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Chatham/Siler_City.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Joanna_Bald():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.325e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cherokee/Joanna_Bald.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Murphy():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cherokee/Murphy.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Valhalla():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Chowan/Valhalla.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chunky_Gal_Gap():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Clay/Chunky_Gal_Gap.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Benns_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cleveland/Benns_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Boiling_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 851.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cleveland/Boiling_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kings_Mountain_South():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cleveland/Kings_Mountain_South.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Shelby():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cleveland/Shelby.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Delco():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Columbus/Delco.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Nakina():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 771.58125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Columbus/Nakina.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Whiteville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Columbus/Whiteville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Name():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f Freqse6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/County/Name.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_New_Bern():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 772.03125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Craven/New_Bern.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Fayetteville_TWC():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.45625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cumberland/Fayetteville_TWC.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Slocomb():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cumberland/Slocomb.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cedar_Creek():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Cumberland/Cedar_Creek.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Barco():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Currituck/Barco.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bodie_Island():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/Bodie_Island.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Buxton():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/Buxton.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_East_Lake():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/East_Lake.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kitty_Hawk():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.4375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/Kitty_Hawk.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Rodanthe():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/Rodanthe.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Stumpy_Point():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Dare/Stumpy_Point.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_High_Rock_Lake():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.03125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Davidson/High_Rock_Lake.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lexington():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Davidson/Lexington.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Welcome():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.20625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Davidson/Welcome.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mocksville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.43125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Davie/Mocksville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Sheffield():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.88125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Davie/Sheffield.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chinquapin():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Duplin/Chinquapin.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kenansville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.95625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Duplin/Kenansville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kornegay():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Duplin/Kornegay.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wallace():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Duplin/Wallace.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Duke_University():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 858.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Durham/Duke_University.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Camden_Ave():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 858.8125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Durham/Camden_Ave.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cole_Mill_Rd():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.5125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Durham/Cole_Mill_Rd.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Brian_Center():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.2875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Durham/Brian_Center.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Dodge_City():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Edgecombe/Dodge_City.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Tarboro_City():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Edgecombe/Tarboro_City.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Fountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.04375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Edgecombe/Fountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Winston_Salem_State_University():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.95e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Forsyth/Winston_Salem_State_University.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Clemmons():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.7875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Forsyth/Clemmons.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Hosley_Forest():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Franklin/Hosley_Forest.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Louisburg():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 852.1375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Franklin/Louisburg.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Margaret():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Franklin/Margaret.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Youngsville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.83125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Franklin/Youngsville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Belmont():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Gaston/Belmont.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cherryville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Gaston/Cherryville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Crowders_Mountain_VFD():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Gaston/Crowders_Mountain_VFD.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Stanley():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.30625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Gaston/Stanley.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Gatesville_DOC():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.45e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Gates/Gatesville_DOC.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wauchecha_Bald():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Graham/Wauchecha_Bald.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Berea():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Granville/Berea.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Butner():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Granville/Butner.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bullock_WICE_FM():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Granville/Bullock_WICE_FM.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Oak_Hill():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Granville/Oak_Hill.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Oxford_Water_Tower():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 852.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Granville/Oxford_Water_Tower.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Arba():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.575e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Greene/Arba.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Farmville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Greene/Farmville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Greensboro_AT():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.74375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Guilford/Greensboro_AT.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Riverdale_Rd():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Guilford/Riverdale_Rd.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Brinkleyville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.85e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Halifax/Brinkleyville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Halifax():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Halifax/Halifax.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cokesbury():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.55625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Cokesbury.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Erwin_PE():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Erwin_PE.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lillington():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 854.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Lillington.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Spout_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 854.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Spout_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Angier():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.08125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Angier.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Broadway():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.49375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Harnett/Broadway.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chambers_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 856.1125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Haywood/Chambers_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Hazel_Top():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.55625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Haywood/Hazel_Top.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bearwallow():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.71875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Henderson/Bearwallow.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Corbin_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 851.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Henderson/Corbin_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Jumpoff_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Henderson/Jumpoff_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Ahoskie():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hertford/Ahoskie.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_McCain_Hospital():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.85e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hoke/McCain_Hospital.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Engelhard():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hyde/Engelhard.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Ocracoke():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hyde/Ocracoke.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Ponzor():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hyde/Ponzor.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Rose_Bay():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Hyde/Rose_Bay.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Barium_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.83125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Iredell/Barium_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Fox_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.525e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Iredell/Fox_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mooresville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Iredell/Mooresville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Toxaway_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Jackson/Toxaway_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Sylva_Jackson_Co_Airport():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Jackson/Sylva_Jackson_Co_Airport.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Archers_Lodge():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Johnston/Archers_Lodge.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Smithfield():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Johnston/Smithfield.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Comfort():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Jones/Comfort.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Tramway():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Lee/Tramway.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Kinston():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Lenoir/Kinston.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Seven_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Lenoir/Seven_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lincolnton():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.89375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Lincoln/Lincolnton.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Cowee_Bald():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.725e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Macon/Cowee_Bald.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Franklin_Water_Tower():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.95625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Macon/Franklin_Water_Tower.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Scaly_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Macon/Scaly_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wine_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Macon/Wine_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Big_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Madison/Big_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Viking_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Madison/Viking_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Hap_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.88125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Madison/Hap_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Williamston():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Martin/Williamston.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Dobson_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.8125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/McDowell/Dobson_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Grants_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 772.91875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/McDowell/Grants_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Heathway_Drive():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.4375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Mecklenburg/Heathway_Drive.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Huntersville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.91875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Mecklenburg/Huntersville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Pineville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Mecklenburg/Pineville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Locust_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Mitchell/Locust_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Woodys_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.38125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Mitchell/Woodys_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Biscoe():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.725e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Montgomery/Biscoe.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Buck_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.59375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Montgomery/Buck_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mount_Gilead_AAA():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Montgomery/Mount_Gilead_AAA.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Carthage():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.325e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Moore/Carthage.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Southern_Pines():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.18125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Moore/Southern_Pines.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Nash_DOC():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.175e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Nash/Nash_DOC.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Rocky_Mount():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.4375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Nash/Rocky_Mount.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wilmington_Fredrickson_Rd():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/New_Hanover/Wilmington_Fredrickson_Rd.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Carolina_Beach():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.95e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/New_Hanover/Carolina_Beach.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Eniva_Roanoke_Rapids():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Northampton/Eniva_Roanoke_Rapids.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Odom_DOC():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.48125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Northampton/Odom_DOC.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Old_Mill():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Northampton/Old_Mill.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Holly_Ridge():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Onslow/Holly_Ridge.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Jacksonville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Onslow/Jacksonville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chapel_Hill():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Orange/Chapel_Hill.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Eno_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.2625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Orange/Eno_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Laws():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.7625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Orange/Laws.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bayboro():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.4625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pamlico/Bayboro.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Elizabeth_City():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pasquotank/Elizabeth_City.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Burgaw():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pender/Burgaw.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Penderlea():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 858.4375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pender/Penderlea.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Scotts_Hill():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.63125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pender/Scotts_Hill.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Winfall():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.66875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Perquimans/Winfall.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Roxboro_1():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.675e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Person/Roxboro_1.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Roxboro_2():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.63125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Person/Roxboro_2.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mt_Tirzah():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 769.26875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Person/Mt_Tirzah.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Greenville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Pitt/Greenville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Tryon_Pk():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.3625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Polk/Tryon_Pk.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Asheboro_DOT():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 856.5375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Randolph/Asheboro_DOT.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Coleridge_AAA():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Randolph/Coleridge_AAA.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Shepherd_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Randolph/Shepherd_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Staley():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.68125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Randolph/Staley.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Ellerbe():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Richmond/Ellerbe.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Hamlet():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Richmond/Hamlet.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Rockingham_DOT():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.13125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Richmond/Rockingham_DOT.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lumberton_UNCTV():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 858.0125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Robeson/Lumberton_UNCTV.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Proctorville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.825e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Robeson/Proctorville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Eden():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rockingham/Eden.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mayodan():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.66875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rockingham/Mayodan.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Reidsville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rockingham/Reidsville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wentworth():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.725e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rockingham/Wentworth.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Faith_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.44375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rowan/Faith_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Salisbury():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.13125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rowan/Salisbury.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chimney_Rock():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 771.58125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rutherford/Chimney_Rock.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Spindale():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.85e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Rutherford/Spindale.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Newton_Grove():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.775e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Sampson/Newton_Grove.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Salemburg():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Sampson/Salemburg.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Taylors_Bridge():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.325e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Sampson/Taylors_Bridge.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Laurinburg_PE():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.45e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Scotland/Laurinburg_PE.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Albemarle():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Stanly/Albemarle.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lambert():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.0375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Stanly/Lambert.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Booth_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Stokes/Booth_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Sandy_Ridge():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Stokes/Sandy_Ridge.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Sauratown_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Stokes/Sauratown_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Chestnut_Ridge():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Surry/Chestnut_Ridge.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Elkin_DOT():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 859.0125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Surry/Elkin_DOT.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Fishers_Peak():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Surry/Fishers_Peak.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Turner_Mtn():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 774.46875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Surry/Turner_Mtn.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Frye_Mountain():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.9875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Swain/Frye_Mountain.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Mt_Noble():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Swain/Mt_Noble.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Brevard():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Transylvania/Brevard.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Columbia():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Tyrrell/Columbia.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Fairview():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.44375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Union/Fairview.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Monroe():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 860.9375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Union/Monroe.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Waxhaw_AAA():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 858.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Union/Waxhaw_AAA.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wingate():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Union/Wingate.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Oxford_Bi_Com():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Vance/Oxford_Bi_Com.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Archdale_Building():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 852.5375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/Archdale_Building.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_West_Raleigh_SHP_C_and_L():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 769.20625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/West_Raleigh_SHP_C_and_L.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_NCSHP_Training_Center():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 772.60625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/NCSHP_Training_Center.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wendell_AAA():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 769.80625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/Wendell_AAA.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wake_North_Durant():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 860.4625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/Wake_North_Durant.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wake_South_Holly_Springs():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wake/Wake_South_Holly_Springs.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Manson():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 773.53125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Warren/Manson.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Warrenton_VTN():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.0875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Warren/Warrenton_VTN.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Plymouth():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 857.2125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Washington/Plymouth.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Boone():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.7625e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Watauga/Boone.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Buckeye_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.975e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Watauga/Buckeye_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Lee_Plant_PE():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.5125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wayne/Lee_Plant_PE.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Pores_Knob():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.75e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wilkes/Pores_Knob.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Bailey():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 857.1875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wilson/Bailey.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Wilson():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.2375e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Wilson/Wilson.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Yadkin_Rest_Area_I77():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.8e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Yadkin/Yadkin_Rest_Area_I77.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Yadkinville():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 772.96875e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Yadkin/Yadkinville.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
def CMD_Clingmans_Peak():
    os.system("pkill -f ./rx.py") 
    os.system("cd ~/op25/op25/gr-op25_repeater/apps; ./rx.py --args 'rtl' -N 'LNA:47' -S 2400000 -f 853.6125e6 -o 25000 -q 1 -T  ~/op25/op25/gr-op25_repeater/apps/NC_Viper/Yancey/Clingmans_Peak.tsv -V -2 -U 2> stderr.2 -O plughw:1,0 -l 'http:0.0.0.0:8080'&")
class OP25_GUI(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oxford_Water_Tower = tk.Button(master=back, text='Oxford_Water_Tower', command=CMD_Oxford_Water_Tower, width=14, height=3)
        Button_Oxford_Water_Tower.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oxford_Bi_Com = tk.Button(master=back, text='Oxford_Bi_Com', command=CMD_Oxford_Bi_Com, width=14, height=3)
        Button_Oxford_Bi_Com.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mt_Tirzah = tk.Button(master=back, text='Mt_Tirzah', command=CMD_Mt_Tirzah, width=14, height=3)
        Button_Mt_Tirzah.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oak_Hill = tk.Button(master=back, text='Oak_Hill', command=CMD_Oak_Hill, width=14, height=3)
        Button_Oak_Hill.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Bullock_WICE_FM = tk.Button(master=back, text='Bullock_WICE_FM', command=CMD_Bullock_WICE_FM, width=14, height=3)
        Button_Bullock_WICE_FM.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Butner = tk.Button(master=back, text='Butner', command=CMD_Butner, width=14, height=3)
        Button_Butner.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Berea = tk.Button(master=back, text='Berea', command=CMD_Berea, width=14, height=3)
        Button_Berea.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Roxboro_1 = tk.Button(master=back, text='Roxboro_1', command=CMD_Roxboro_1, width=14, height=3)
        Button_Roxboro_1.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Roxboro_2 = tk.Button(master=back, text='Roxboro_2', command=CMD_Roxboro_2, width=14, height=3)
        Button_Roxboro_2.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Manson = tk.Button(master=back, text='Manson', command=CMD_Manson, width=14, height=3)
        Button_Manson.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Youngsville = tk.Button(master=back, text='Youngsville', command=CMD_Youngsville, width=14, height=3)
        Button_Youngsville.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Louisburg = tk.Button(master=back, text='Louisburg', command=CMD_Louisburg, width=14, height=3)
        Button_Louisburg.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Brian_Center = tk.Button(master=back, text='Brian_Center', command=CMD_Brian_Center, width=14, height=3)
        Button_Brian_Center.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cole_Mill_Rd = tk.Button(master=back, text='Cole_Mill_Rd', command=CMD_Cole_Mill_Rd, width=14, height=3)
        Button_Cole_Mill_Rd.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Duke_University = tk.Button(master=back, text='Duke_University', command=CMD_Duke_University, width=14, height=3)
        Button_Duke_University.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Camden_Ave = tk.Button(master=back, text='Camden_Ave', command=CMD_Camden_Ave, width=14, height=3)
        Button_Camden_Ave.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Eno_Mtn = tk.Button(master=back, text='Eno_Mtn', command=CMD_Eno_Mtn, width=14, height=3)
        Button_Eno_Mtn.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Laws = tk.Button(master=back, text='Laws', command=CMD_Laws, width=14, height=3)
        Button_Laws.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wake_North_Durant = tk.Button(master=back, text='Wake_North_Durant', command=CMD_Wake_North_Durant, width=14, height=3)
        Button_Wake_North_Durant.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mebane = tk.Button(master=back, text='Mebane', command=CMD_Mebane, width=14, height=3)
        Button_Mebane.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        close = tk.Button(master=back, text='Quit', command=self.mw.destroy)
        close.pack(side='bottom')
        info = tk.Label(master=back, text='Created By:', bg='Teal', fg='black')
        info1 = tk.Label(master=back, text='Alex Bowman - KN4KNG', bg='Teal', fg='black')
        info2 = tk.Label(master=back, text='KN4KNG@Outlook.com', bg='Teal', fg='black')
        info2.pack(side='bottom')
        info1.pack(side='bottom')
        info.pack(side='bottom')
        self.start()
    def NC_Counties_Home(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=5, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.__init__, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        menu_direction = tk.Label(master=back, text='Select the Letter Group of the County you want:', bg='Teal', fg='black')
        menu_direction.pack(side='top')
        Button_AC = tk.Button(master=back, text='A-C', command=self.Menu_AC, width=14, height=3)
        Button_AC.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_CG = tk.Button(master=back, text='C-G', command=self.Menu_CG, width=14, height=3)
        Button_CG.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_GM = tk.Button(master=back, text='G-M', command=self.Menu_GM, width=14, height=3)
        Button_GM.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_MR = tk.Button(master=back, text='M-R', command=self.Menu_MR, width=14, height=3)
        Button_MR.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_RZ = tk.Button(master=back, text='R-Z', command=self.Menu_RZ, width=14, height=3)
        Button_RZ.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        close = tk.Button(master=back, text='Quit', command=self.mw.destroy)
        close.pack(side='bottom')
        info = tk.Label(master=back, text='Created By:', bg='Teal', fg='black')
        info1 = tk.Label(master=back, text='Alex Bowman - KN4KNG', bg='Teal', fg='black')
        info2 = tk.Label(master=back, text='KN4KNG@Outlook.com', bg='Teal', fg='black')
        info2.pack(side='bottom')
        info1.pack(side='bottom')
        info.pack(side='bottom')
    def Favorites(self):
        self.mw.destroy()
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oxford_Water_Tower = tk.Button(master=back, text='Oxford_Water_Tower', command=CMD_Oxford_Water_Tower, width=14, height=3)
        Button_Oxford_Water_Tower.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oxford_Bi_Com = tk.Button(master=back, text='Oxford_Bi_Com', command=CMD_Oxford_Bi_Com, width=14, height=3)
        Button_Oxford_Bi_Com.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mt_Tirzah = tk.Button(master=back, text='Mt_Tirzah', command=CMD_Mt_Tirzah, width=14, height=3)
        Button_Mt_Tirzah.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Oak_Hill = tk.Button(master=back, text='Oak_Hill', command=CMD_Oak_Hill, width=14, height=3)
        Button_Oak_Hill.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Bullock_WICE_FM = tk.Button(master=back, text='Bullock_WICE_FM', command=CMD_Bullock_WICE_FM, width=14, height=3)
        Button_Bullock_WICE_FM.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Butner = tk.Button(master=back, text='Butner', command=CMD_Butner, width=14, height=3)
        Button_Butner.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Berea = tk.Button(master=back, text='Berea', command=CMD_Berea, width=14, height=3)
        Button_Berea.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Roxboro_1 = tk.Button(master=back, text='Roxboro_1', command=CMD_Roxboro_1, width=14, height=3)
        Button_Roxboro_1.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Roxboro_2 = tk.Button(master=back, text='Roxboro_2', command=CMD_Roxboro_2, width=14, height=3)
        Button_Roxboro_2.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Manson = tk.Button(master=back, text='Manson', command=CMD_Manson, width=14, height=3)
        Button_Manson.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Youngsville = tk.Button(master=back, text='Youngsville', command=CMD_Youngsville, width=14, height=3)
        Button_Youngsville.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Louisburg = tk.Button(master=back, text='Louisburg', command=CMD_Louisburg, width=14, height=3)
        Button_Louisburg.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Brian_Center = tk.Button(master=back, text='Brian_Center', command=CMD_Brian_Center, width=14, height=3)
        Button_Brian_Center.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cole_Mill_Rd = tk.Button(master=back, text='Cole_Mill_Rd', command=CMD_Cole_Mill_Rd, width=14, height=3)
        Button_Cole_Mill_Rd.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Duke_University = tk.Button(master=back, text='Duke_University', command=CMD_Duke_University, width=14, height=3)
        Button_Duke_University.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Camden_Ave = tk.Button(master=back, text='Camden_Ave', command=CMD_Camden_Ave, width=14, height=3)
        Button_Camden_Ave.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Eno_Mtn = tk.Button(master=back, text='Eno_Mtn', command=CMD_Eno_Mtn, width=14, height=3)
        Button_Eno_Mtn.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Laws = tk.Button(master=back, text='Laws', command=CMD_Laws, width=14, height=3)
        Button_Laws.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wake_North_Durant = tk.Button(master=back, text='Wake_North_Durant', command=CMD_Wake_North_Durant, width=14, height=3)
        Button_Wake_North_Durant.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mebane = tk.Button(master=back, text='Mebane', command=CMD_Mebane, width=14, height=3)
        Button_Mebane.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        close = tk.Button(master=back, text='Quit', command=self.mw.destroy)
        close.pack(side='bottom')
        info = tk.Label(master=back, text='Created By:', bg='Teal', fg='black')
        info1 = tk.Label(master=back, text='Alex Bowman - KN4KNG', bg='Teal', fg='black')
        info2 = tk.Label(master=back, text='KN4KNG@Outlook.com', bg='Teal', fg='black')
        info2.pack(side='bottom')
        info1.pack(side='bottom')
        info.pack(side='bottom')
    def Menu_AC(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Alamance = tk.Button(master=back, text='Alamance', command=self.Menu_Alamance, width=14, height=3)
        Button_Alamance.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Alexander = tk.Button(master=back, text='Alexander', command=self.Menu_Alexander, width=14, height=3)
        Button_Alexander.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Alleghany = tk.Button(master=back, text='Alleghany', command=self.Menu_Alleghany, width=14, height=3)
        Button_Alleghany.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Anson = tk.Button(master=back, text='Anson', command=self.Menu_Anson, width=14, height=3)
        Button_Anson.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Ashe = tk.Button(master=back, text='Ashe', command=self.Menu_Ashe, width=14, height=3)
        Button_Ashe.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Avery = tk.Button(master=back, text='Avery', command=self.Menu_Avery, width=14, height=3)
        Button_Avery.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Beaufort = tk.Button(master=back, text='Beaufort', command=self.Menu_Beaufort, width=14, height=3)
        Button_Beaufort.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Bertie = tk.Button(master=back, text='Bertie', command=self.Menu_Bertie, width=14, height=3)
        Button_Bertie.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Bladen = tk.Button(master=back, text='Bladen', command=self.Menu_Bladen, width=14, height=3)
        Button_Bladen.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Brunswick = tk.Button(master=back, text='Brunswick', command=self.Menu_Brunswick, width=14, height=3)
        Button_Brunswick.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Buncombe = tk.Button(master=back, text='Buncombe', command=self.Menu_Buncombe, width=14, height=3)
        Button_Buncombe.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Burke = tk.Button(master=back, text='Burke', command=self.Menu_Burke, width=14, height=3)
        Button_Burke.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cabarrus = tk.Button(master=back, text='Cabarrus', command=self.Menu_Cabarrus, width=14, height=3)
        Button_Cabarrus.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Caldwell = tk.Button(master=back, text='Caldwell', command=self.Menu_Caldwell, width=14, height=3)
        Button_Caldwell.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Camden = tk.Button(master=back, text='Camden', command=self.Menu_Camden, width=14, height=3)
        Button_Camden.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Carteret = tk.Button(master=back, text='Carteret', command=self.Menu_Carteret, width=14, height=3)
        Button_Carteret.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Caswell = tk.Button(master=back, text='Caswell', command=self.Menu_Caswell, width=14, height=3)
        Button_Caswell.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Catawba = tk.Button(master=back, text='Catawba', command=self.Menu_Catawba, width=14, height=3)
        Button_Catawba.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Chatham = tk.Button(master=back, text='Chatham', command=self.Menu_Chatham, width=14, height=3)
        Button_Chatham.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cherokee = tk.Button(master=back, text='Cherokee', command=self.Menu_Cherokee, width=14, height=3)
        Button_Cherokee.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_CG(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Chowan = tk.Button(master=back, text='Chowan', command=self.Menu_Chowan, width=14, height=3)
        Button_Chowan.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Clay = tk.Button(master=back, text='Clay', command=self.Menu_Clay, width=14, height=3)
        Button_Clay.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cleveland = tk.Button(master=back, text='Cleveland', command=self.Menu_Cleveland, width=14, height=3)
        Button_Cleveland.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Columbus = tk.Button(master=back, text='Columbus', command=self.Menu_Columbus, width=14, height=3)
        Button_Columbus.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Craven = tk.Button(master=back, text='Craven', command=self.Menu_Craven, width=14, height=3)
        Button_Craven.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Cumberland = tk.Button(master=back, text='Cumberland', command=self.Menu_Cumberland, width=14, height=3)
        Button_Cumberland.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Currituck = tk.Button(master=back, text='Currituck', command=self.Menu_Currituck, width=14, height=3)
        Button_Currituck.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Dare = tk.Button(master=back, text='Dare', command=self.Menu_Dare, width=14, height=3)
        Button_Dare.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Davidson = tk.Button(master=back, text='Davidson', command=self.Menu_Davidson, width=14, height=3)
        Button_Davidson.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Davie = tk.Button(master=back, text='Davie', command=self.Menu_Davie, width=14, height=3)
        Button_Davie.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Duplin = tk.Button(master=back, text='Duplin', command=self.Menu_Duplin, width=14, height=3)
        Button_Duplin.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Durham = tk.Button(master=back, text='Durham', command=self.Menu_Durham, width=14, height=3)
        Button_Durham.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Edgecombe = tk.Button(master=back, text='Edgecombe', command=self.Menu_Edgecombe, width=14, height=3)
        Button_Edgecombe.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Forsyth = tk.Button(master=back, text='Forsyth', command=self.Menu_Forsyth, width=14, height=3)
        Button_Forsyth.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Franklin = tk.Button(master=back, text='Franklin', command=self.Menu_Franklin, width=14, height=3)
        Button_Franklin.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Gaston = tk.Button(master=back, text='Gaston', command=self.Menu_Gaston, width=14, height=3)
        Button_Gaston.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Gates = tk.Button(master=back, text='Gates', command=self.Menu_Gates, width=14, height=3)
        Button_Gates.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Graham = tk.Button(master=back, text='Graham', command=self.Menu_Graham, width=14, height=3)
        Button_Graham.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Granville = tk.Button(master=back, text='Granville', command=self.Menu_Granville, width=14, height=3)
        Button_Granville.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Greene = tk.Button(master=back, text='Greene', command=self.Menu_Greene, width=14, height=3)
        Button_Greene.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_GM(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Guilford = tk.Button(master=back, text='Guilford', command=self.Menu_Guilford, width=14, height=3)
        Button_Guilford.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Halifax = tk.Button(master=back, text='Halifax', command=self.Menu_Halifax, width=14, height=3)
        Button_Halifax.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Harnett = tk.Button(master=back, text='Harnett', command=self.Menu_Harnett, width=14, height=3)
        Button_Harnett.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Haywood = tk.Button(master=back, text='Haywood', command=self.Menu_Haywood, width=14, height=3)
        Button_Haywood.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Henderson = tk.Button(master=back, text='Henderson', command=self.Menu_Henderson, width=14, height=3)
        Button_Henderson.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Hertford = tk.Button(master=back, text='Hertford', command=self.Menu_Hertford, width=14, height=3)
        Button_Hertford.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Hoke = tk.Button(master=back, text='Hoke', command=self.Menu_Hoke, width=14, height=3)
        Button_Hoke.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Hyde = tk.Button(master=back, text='Hyde', command=self.Menu_Hyde, width=14, height=3)
        Button_Hyde.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Iredell = tk.Button(master=back, text='Iredell', command=self.Menu_Iredell, width=14, height=3)
        Button_Iredell.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Jackson = tk.Button(master=back, text='Jackson', command=self.Menu_Jackson, width=14, height=3)
        Button_Jackson.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Johnston = tk.Button(master=back, text='Johnston', command=self.Menu_Johnston, width=14, height=3)
        Button_Johnston.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Jones = tk.Button(master=back, text='Jones', command=self.Menu_Jones, width=14, height=3)
        Button_Jones.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Lee = tk.Button(master=back, text='Lee', command=self.Menu_Lee, width=14, height=3)
        Button_Lee.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Lenoir = tk.Button(master=back, text='Lenoir', command=self.Menu_Lenoir, width=14, height=3)
        Button_Lenoir.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Lincoln = tk.Button(master=back, text='Lincoln', command=self.Menu_Lincoln, width=14, height=3)
        Button_Lincoln.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Macon = tk.Button(master=back, text='Macon', command=self.Menu_Macon, width=14, height=3)
        Button_Macon.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Madison = tk.Button(master=back, text='Madison', command=self.Menu_Madison, width=14, height=3)
        Button_Madison.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Martin = tk.Button(master=back, text='Martin', command=self.Menu_Martin, width=14, height=3)
        Button_Martin.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_McDowell = tk.Button(master=back, text='McDowell', command=self.Menu_McDowell, width=14, height=3)
        Button_McDowell.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mecklenburg = tk.Button(master=back, text='Mecklenburg', command=self.Menu_Mecklenburg, width=14, height=3)
        Button_Mecklenburg.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_MR(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Mitchell = tk.Button(master=back, text='Mitchell', command=self.Menu_Mitchell, width=14, height=3)
        Button_Mitchell.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Montgomery = tk.Button(master=back, text='Montgomery', command=self.Menu_Montgomery, width=14, height=3)
        Button_Montgomery.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Moore = tk.Button(master=back, text='Moore', command=self.Menu_Moore, width=14, height=3)
        Button_Moore.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Nash = tk.Button(master=back, text='Nash', command=self.Menu_Nash, width=14, height=3)
        Button_Nash.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_New_Hanover = tk.Button(master=back, text='New_Hanover', command=self.Menu_New_Hanover, width=14, height=3)
        Button_New_Hanover.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Northampton = tk.Button(master=back, text='Northampton', command=self.Menu_Northampton, width=14, height=3)
        Button_Northampton.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Onslow = tk.Button(master=back, text='Onslow', command=self.Menu_Onslow, width=14, height=3)
        Button_Onslow.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Orange = tk.Button(master=back, text='Orange', command=self.Menu_Orange, width=14, height=3)
        Button_Orange.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Pamlico = tk.Button(master=back, text='Pamlico', command=self.Menu_Pamlico, width=14, height=3)
        Button_Pamlico.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Pasquotank = tk.Button(master=back, text='Pasquotank', command=self.Menu_Pasquotank, width=14, height=3)
        Button_Pasquotank.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Pender = tk.Button(master=back, text='Pender', command=self.Menu_Pender, width=14, height=3)
        Button_Pender.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Perquimans = tk.Button(master=back, text='Perquimans', command=self.Menu_Perquimans, width=14, height=3)
        Button_Perquimans.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Person = tk.Button(master=back, text='Person', command=self.Menu_Person, width=14, height=3)
        Button_Person.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Pitt = tk.Button(master=back, text='Pitt', command=self.Menu_Pitt, width=14, height=3)
        Button_Pitt.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Polk = tk.Button(master=back, text='Polk', command=self.Menu_Polk, width=14, height=3)
        Button_Polk.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Randolph = tk.Button(master=back, text='Randolph', command=self.Menu_Randolph, width=14, height=3)
        Button_Randolph.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Richmond = tk.Button(master=back, text='Richmond', command=self.Menu_Richmond, width=14, height=3)
        Button_Richmond.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Robeson = tk.Button(master=back, text='Robeson', command=self.Menu_Robeson, width=14, height=3)
        Button_Robeson.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Rockingham = tk.Button(master=back, text='Rockingham', command=self.Menu_Rockingham, width=14, height=3)
        Button_Rockingham.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Rowan = tk.Button(master=back, text='Rowan', command=self.Menu_Rowan, width=14, height=3)
        Button_Rowan.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_RZ(self):
        self.mw.destroy() 
        self.mw = tk.Tk()
        #Specify the attributes for all widgets simply like this.
        self.mw.option_add("*Button.Background", "Teal")
        self.mw.option_add("*Button.Foreground", "White")
        self.mw.title('OP25 Repeater Selector GUI')
        #You can set the geometry attribute to change the root windows size
        self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
        self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
        back = tk.Frame(master=self.mw,bg='Grey')
        back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
        back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
        #Buttons
        Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
        Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
        GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
        GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Rutherford = tk.Button(master=back, text='Rutherford', command=self.Menu_Rutherford, width=14, height=3)
        Button_Rutherford.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Sampson = tk.Button(master=back, text='Sampson', command=self.Menu_Sampson, width=14, height=3)
        Button_Sampson.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Scotland = tk.Button(master=back, text='Scotland', command=self.Menu_Scotland, width=14, height=3)
        Button_Scotland.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Stanly = tk.Button(master=back, text='Stanly', command=self.Menu_Stanly, width=14, height=3)
        Button_Stanly.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Stokes = tk.Button(master=back, text='Stokes', command=self.Menu_Stokes, width=14, height=3)
        Button_Stokes.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Surry = tk.Button(master=back, text='Surry', command=self.Menu_Surry, width=14, height=3)
        Button_Surry.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Swain = tk.Button(master=back, text='Swain', command=self.Menu_Swain, width=14, height=3)
        Button_Swain.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Transylvania = tk.Button(master=back, text='Transylvania', command=self.Menu_Transylvania, width=14, height=3)
        Button_Transylvania.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Tyrrell = tk.Button(master=back, text='Tyrrell', command=self.Menu_Tyrrell, width=14, height=3)
        Button_Tyrrell.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Union = tk.Button(master=back, text='Union', command=self.Menu_Union, width=14, height=3)
        Button_Union.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Vance = tk.Button(master=back, text='Vance', command=self.Menu_Vance, width=14, height=3)
        Button_Vance.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wake = tk.Button(master=back, text='Wake', command=self.Menu_Wake, width=14, height=3)
        Button_Wake.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Warren = tk.Button(master=back, text='Warren', command=self.Menu_Warren, width=14, height=3)
        Button_Warren.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Washington = tk.Button(master=back, text='Washington', command=self.Menu_Washington, width=14, height=3)
        Button_Washington.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Watauga = tk.Button(master=back, text='Watauga', command=self.Menu_Watauga, width=14, height=3)
        Button_Watauga.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wayne = tk.Button(master=back, text='Wayne', command=self.Menu_Wayne, width=14, height=3)
        Button_Wayne.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wilkes = tk.Button(master=back, text='Wilkes', command=self.Menu_Wilkes, width=14, height=3)
        Button_Wilkes.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Wilson = tk.Button(master=back, text='Wilson', command=self.Menu_Wilson, width=14, height=3)
        Button_Wilson.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Yadkin = tk.Button(master=back, text='Yadkin', command=self.Menu_Yadkin, width=14, height=3)
        Button_Yadkin.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
        Button_Yancey = tk.Button(master=back, text='Yancey', command=self.Menu_Yancey, width=14, height=3)
        Button_Yancey.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Alamance(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Altamahaw = tk.Button(master=back, text='Altamahaw', command=CMD_Altamahaw, width=14, height=3)
            Button_Altamahaw.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cane_Mtn = tk.Button(master=back, text='Cane_Mtn', command=CMD_Cane_Mtn, width=14, height=3)
            Button_Cane_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mebane = tk.Button(master=back, text='Mebane', command=CMD_Mebane, width=14, height=3)
            Button_Mebane.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Alexander(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Barretts_Mountain = tk.Button(master=back, text='Barretts_Mountain', command=CMD_Barretts_Mountain, width=14, height=3)
            Button_Barretts_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Alleghany(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Doughton_Mtn = tk.Button(master=back, text='Doughton_Mtn', command=CMD_Doughton_Mtn, width=14, height=3)
            Button_Doughton_Mtn.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Green_Mtn = tk.Button(master=back, text='Green_Mtn', command=CMD_Green_Mtn, width=14, height=3)
            Button_Green_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Anson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mc_Farlan_AAA = tk.Button(master=back, text='Mc_Farlan_AAA', command=CMD_Mc_Farlan_AAA, width=14, height=3)
            Button_Mc_Farlan_AAA.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wadesboro = tk.Button(master=back, text='Wadesboro', command=CMD_Wadesboro, width=14, height=3)
            Button_Wadesboro.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Ashe(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Deep_Gap_Mtn = tk.Button(master=back, text='Deep_Gap_Mtn', command=CMD_Deep_Gap_Mtn, width=14, height=3)
            Button_Deep_Gap_Mtn.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Jefferson_Mtn = tk.Button(master=back, text='Jefferson_Mtn', command=CMD_Jefferson_Mtn, width=14, height=3)
            Button_Jefferson_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Phoenix_Mtn = tk.Button(master=back, text='Phoenix_Mtn', command=CMD_Phoenix_Mtn, width=14, height=3)
            Button_Phoenix_Mtn.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Rich_Hill = tk.Button(master=back, text='Rich_Hill', command=CMD_Rich_Hill, width=14, height=3)
            Button_Rich_Hill.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Avery(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Beech_Mountain = tk.Button(master=back, text='Beech_Mountain', command=CMD_Beech_Mountain, width=14, height=3)
            Button_Beech_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Linville = tk.Button(master=back, text='Linville', command=CMD_Linville, width=14, height=3)
            Button_Linville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Beaufort(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bath = tk.Button(master=back, text='Bath', command=CMD_Bath, width=14, height=3)
            Button_Bath.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chocowinity = tk.Button(master=back, text='Chocowinity', command=CMD_Chocowinity, width=14, height=3)
            Button_Chocowinity.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Bertie(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Windsor = tk.Button(master=back, text='Windsor', command=CMD_Windsor, width=14, height=3)
            Button_Windsor.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Bladen(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Elizabethtown = tk.Button(master=back, text='Elizabethtown', command=CMD_Elizabethtown, width=14, height=3)
            Button_Elizabethtown.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Four_County_EMC_Bladenboro = tk.Button(master=back, text='Four_County_EMC_Bladenboro', command=CMD_Four_County_EMC_Bladenboro, width=14, height=3)
            Button_Four_County_EMC_Bladenboro.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lagoon = tk.Button(master=back, text='Lagoon', command=CMD_Lagoon, width=14, height=3)
            Button_Lagoon.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Brunswick(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bolivia = tk.Button(master=back, text='Bolivia', command=CMD_Bolivia, width=14, height=3)
            Button_Bolivia.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Southport = tk.Button(master=back, text='Southport', command=CMD_Southport, width=14, height=3)
            Button_Southport.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Pea_Landing = tk.Button(master=back, text='Pea_Landing', command=CMD_Pea_Landing, width=14, height=3)
            Button_Pea_Landing.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Supply = tk.Button(master=back, text='Supply', command=CMD_Supply, width=14, height=3)
            Button_Supply.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Buncombe(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_High_Windy = tk.Button(master=back, text='High_Windy', command=CMD_High_Windy, width=14, height=3)
            Button_High_Windy.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Meadows_Moutain = tk.Button(master=back, text='Meadows_Moutain', command=CMD_Meadows_Moutain, width=14, height=3)
            Button_Meadows_Moutain.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_White_Fawn = tk.Button(master=back, text='White_Fawn', command=CMD_White_Fawn, width=14, height=3)
            Button_White_Fawn.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Burke(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_High_Peak = tk.Button(master=back, text='High_Peak', command=CMD_High_Peak, width=14, height=3)
            Button_High_Peak.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Cabarrus(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Concord = tk.Button(master=back, text='Concord', command=CMD_Concord, width=14, height=3)
            Button_Concord.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Caldwell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Butte_Moutain = tk.Button(master=back, text='Butte_Moutain', command=CMD_Butte_Moutain, width=14, height=3)
            Button_Butte_Moutain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Hibriten_Mountain = tk.Button(master=back, text='Hibriten_Mountain', command=CMD_Hibriten_Mountain, width=14, height=3)
            Button_Hibriten_Mountain.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Camden(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_South_Mills = tk.Button(master=back, text='South_Mills', command=CMD_South_Mills, width=14, height=3)
            Button_South_Mills.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Carteret(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kuhns_PE = tk.Button(master=back, text='Kuhns_PE', command=CMD_Kuhns_PE, width=14, height=3)
            Button_Kuhns_PE.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Laurel_Road = tk.Button(master=back, text='Laurel_Road', command=CMD_Laurel_Road, width=14, height=3)
            Button_Laurel_Road.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Newport = tk.Button(master=back, text='Newport', command=CMD_Newport, width=14, height=3)
            Button_Newport.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Stacy = tk.Button(master=back, text='Stacy', command=CMD_Stacy, width=14, height=3)
            Button_Stacy.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Caswell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Pelham = tk.Button(master=back, text='Pelham', command=CMD_Pelham, width=14, height=3)
            Button_Pelham.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Yanceyville = tk.Button(master=back, text='Yanceyville', command=CMD_Yanceyville, width=14, height=3)
            Button_Yanceyville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Catawba(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Anderson_Mountain = tk.Button(master=back, text='Anderson_Mountain', command=CMD_Anderson_Mountain, width=14, height=3)
            Button_Anderson_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Baker_Mtn = tk.Button(master=back, text='Baker_Mtn', command=CMD_Baker_Mtn, width=14, height=3)
            Button_Baker_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_River_Bend_Rd = tk.Button(master=back, text='River_Bend_Rd', command=CMD_River_Bend_Rd, width=14, height=3)
            Button_River_Bend_Rd.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Chatham(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chatham_Mountain = tk.Button(master=back, text='Chatham_Mountain', command=CMD_Chatham_Mountain, width=14, height=3)
            Button_Chatham_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Siler_City = tk.Button(master=back, text='Siler_City', command=CMD_Siler_City, width=14, height=3)
            Button_Siler_City.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Cherokee(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Joanna_Bald = tk.Button(master=back, text='Joanna_Bald', command=CMD_Joanna_Bald, width=14, height=3)
            Button_Joanna_Bald.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Murphy = tk.Button(master=back, text='Murphy', command=CMD_Murphy, width=14, height=3)
            Button_Murphy.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Chowan(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Joanna_Bald = tk.Button(master=back, text='Joanna_Bald', command=CMD_Joanna_Bald, width=14, height=3)
            Button_Joanna_Bald.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Clay(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chunky_Gal_Gap = tk.Button(master=back, text='Chunky_Gal_Gap', command=CMD_Chunky_Gal_Gap, width=14, height=3)
            Button_Chunky_Gal_Gap.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Cleveland(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Benns_Knob = tk.Button(master=back, text='Benns_Knob', command=CMD_Benns_Knob, width=14, height=3)
            Button_Benns_Knob.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Boiling_Springs = tk.Button(master=back, text='Boiling_Springs', command=CMD_Boiling_Springs, width=14, height=3)
            Button_Boiling_Springs.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kings_Mountain_South = tk.Button(master=back, text='Kings_Mountain_South', command=CMD_Kings_Mountain_South, width=14, height=3)
            Button_Kings_Mountain_South.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Shelby = tk.Button(master=back, text='Shelby', command=CMD_Shelby, width=14, height=3)
            Button_Shelby.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Columbus(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Delco = tk.Button(master=back, text='Delco', command=CMD_Delco, width=14, height=3)
            Button_Delco.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Nakina = tk.Button(master=back, text='Nakina', command=CMD_Nakina, width=14, height=3)
            Button_Nakina.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Whiteville = tk.Button(master=back, text='Whiteville', command=CMD_Whiteville, width=14, height=3)
            Button_Whiteville.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Craven(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_New_Bern = tk.Button(master=back, text='New_Bern', command=CMD_New_Bern, width=14, height=3)
            Button_New_Bern.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Cumberland(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Fayetteville_TWC = tk.Button(master=back, text='Fayetteville_TWC', command=CMD_Fayetteville_TWC, width=14, height=3)
            Button_Fayetteville_TWC.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Slocomb = tk.Button(master=back, text='Slocomb', command=CMD_Slocomb, width=14, height=3)
            Button_Slocomb.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cedar_Creek = tk.Button(master=back, text='Cedar_Creek', command=CMD_Cedar_Creek, width=14, height=3)
            Button_Cedar_Creek.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Currituck(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Barco = tk.Button(master=back, text='Barco', command=CMD_Barco, width=14, height=3)
            Button_Barco.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Dare(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bodie_Island = tk.Button(master=back, text='Bodie_Island', command=CMD_Bodie_Island, width=14, height=3)
            Button_Bodie_Island.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Buxton = tk.Button(master=back, text='Buxton', command=CMD_Buxton, width=14, height=3)
            Button_Buxton.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_East_Lake = tk.Button(master=back, text='East_Lake', command=CMD_East_Lake, width=14, height=3)
            Button_East_Lake.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kitty_Hawk = tk.Button(master=back, text='Kitty_Hawk', command=CMD_Kitty_Hawk, width=14, height=3)
            Button_Kitty_Hawk.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Rodanthe = tk.Button(master=back, text='Rodanthe', command=CMD_Rodanthe, width=14, height=3)
            Button_Rodanthe.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Stumpy_Point = tk.Button(master=back, text='Stumpy_Point', command=CMD_Stumpy_Point, width=14, height=3)
            Button_Stumpy_Point.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Davidson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_High_Rock_Lake = tk.Button(master=back, text='High_Rock_Lake', command=CMD_High_Rock_Lake, width=14, height=3)
            Button_High_Rock_Lake.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lexington = tk.Button(master=back, text='Lexington', command=CMD_Lexington, width=14, height=3)
            Button_Lexington.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Welcome = tk.Button(master=back, text='Welcome', command=CMD_Welcome, width=14, height=3)
            Button_Welcome.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Davie(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mocksville = tk.Button(master=back, text='Mocksville', command=CMD_Mocksville, width=14, height=3)
            Button_Mocksville.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Sheffield = tk.Button(master=back, text='Sheffield', command=CMD_Sheffield, width=14, height=3)
            Button_Sheffield.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Duplin(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chinquapin = tk.Button(master=back, text='Chinquapin', command=CMD_Chinquapin, width=14, height=3)
            Button_Chinquapin.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kenansville = tk.Button(master=back, text='Kenansville', command=CMD_Kenansville, width=14, height=3)
            Button_Kenansville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kornegay = tk.Button(master=back, text='Kornegay', command=CMD_Kornegay, width=14, height=3)
            Button_Kornegay.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wallace = tk.Button(master=back, text='Wallace', command=CMD_Wallace, width=14, height=3)
            Button_Wallace.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Durham(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Duke_University = tk.Button(master=back, text='Duke_University', command=CMD_Duke_University, width=14, height=3)
            Button_Duke_University.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Camden_Ave = tk.Button(master=back, text='Camden_Ave', command=CMD_Camden_Ave, width=14, height=3)
            Button_Camden_Ave.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cole_Mill_Rd = tk.Button(master=back, text='Cole_Mill_Rd', command=CMD_Cole_Mill_Rd, width=14, height=3)
            Button_Cole_Mill_Rd.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Brian_Center = tk.Button(master=back, text='Brian_Center', command=CMD_Brian_Center, width=14, height=3)
            Button_Brian_Center.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Edgecombe(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Dodge_City = tk.Button(master=back, text='Dodge_City', command=CMD_Dodge_City, width=14, height=3)
            Button_Dodge_City.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Tarboro_City = tk.Button(master=back, text='Tarboro_City', command=CMD_Tarboro_City, width=14, height=3)
            Button_Tarboro_City.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Fountain = tk.Button(master=back, text='Fountain', command=CMD_Fountain, width=14, height=3)
            Button_Fountain.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Forsyth(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Winston_Salem_State_University = tk.Button(master=back, text='Winston_Salem_State_University', command=CMD_Winston_Salem_State_University, width=14, height=3)
            Button_Winston_Salem_State_University.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Clemmons = tk.Button(master=back, text='Clemmons', command=CMD_Clemmons, width=14, height=3)
            Button_Clemmons.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Franklin(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Hosley_Forest = tk.Button(master=back, text='Hosley_Forest', command=CMD_Hosley_Forest, width=14, height=3)
            Button_Hosley_Forest.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Louisburg = tk.Button(master=back, text='Louisburg', command=CMD_Louisburg, width=14, height=3)
            Button_Louisburg.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Margaret = tk.Button(master=back, text='Margaret', command=CMD_Margaret, width=14, height=3)
            Button_Margaret.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Youngsville = tk.Button(master=back, text='Youngsville', command=CMD_Youngsville, width=14, height=3)
            Button_Youngsville.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Gaston(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Belmont = tk.Button(master=back, text='Belmont', command=CMD_Belmont, width=14, height=3)
            Button_Belmont.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cherryville = tk.Button(master=back, text='Cherryville', command=CMD_Cherryville, width=14, height=3)
            Button_Cherryville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Crowders_Mountain_VFD = tk.Button(master=back, text='Crowders_Mountain_VFD', command=CMD_Crowders_Mountain_VFD, width=14, height=3)
            Button_Crowders_Mountain_VFD.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Stanley = tk.Button(master=back, text='Stanley', command=CMD_Stanley, width=14, height=3)
            Button_Stanley.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Gates(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Gatesville_DOC = tk.Button(master=back, text='Gatesville_DOC', command=CMD_Gatesville_DOC, width=14, height=3)
            Button_Gatesville_DOC.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Graham(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wauchecha_Bald = tk.Button(master=back, text='Wauchecha_Bald', command=CMD_Wauchecha_Bald, width=14, height=3)
            Button_Wauchecha_Bald.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Granville(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Berea = tk.Button(master=back, text='Berea', command=CMD_Berea, width=14, height=3)
            Button_Berea.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Butner = tk.Button(master=back, text='Butner', command=CMD_Butner, width=14, height=3)
            Button_Butner.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bullock_WICE_FM = tk.Button(master=back, text='Bullock_WICE_FM', command=CMD_Bullock_WICE_FM, width=14, height=3)
            Button_Bullock_WICE_FM.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Oak_Hill = tk.Button(master=back, text='Oak_Hill', command=CMD_Oak_Hill, width=14, height=3)
            Button_Oak_Hill.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Oxford_Water_Tower = tk.Button(master=back, text='Oxford_Water_Tower', command=CMD_Oxford_Water_Tower, width=14, height=3)
            Button_Oxford_Water_Tower.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Greene(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Arba = tk.Button(master=back, text='Arba', command=CMD_Arba, width=14, height=3)
            Button_Arba.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Farmville = tk.Button(master=back, text='Farmville', command=CMD_Farmville, width=14, height=3)
            Button_Farmville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Guilford(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Greensboro_AT = tk.Button(master=back, text='Greensboro_AT', command=CMD_Greensboro_AT, width=14, height=3)
            Button_Greensboro_AT.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Riverdale_Rd = tk.Button(master=back, text='Riverdale_Rd', command=CMD_Riverdale_Rd, width=14, height=3)
            Button_Riverdale_Rd.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Halifax(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Brinkleyville = tk.Button(master=back, text='Brinkleyville', command=CMD_Brinkleyville, width=14, height=3)
            Button_Brinkleyville.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Halifax = tk.Button(master=back, text='Halifax', command=CMD_Halifax, width=14, height=3)
            Button_Halifax.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Harnett(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cokesbury = tk.Button(master=back, text='Cokesbury', command=CMD_Cokesbury, width=14, height=3)
            Button_Cokesbury.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Erwin_PE = tk.Button(master=back, text='Erwin_PE', command=CMD_Erwin_PE, width=14, height=3)
            Button_Erwin_PE.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lillington = tk.Button(master=back, text='Lillington', command=CMD_Lillington, width=14, height=3)
            Button_Lillington.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Spout_Springs = tk.Button(master=back, text='Spout_Springs', command=CMD_Spout_Springs, width=14, height=3)
            Button_Spout_Springs.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Angier = tk.Button(master=back, text='Angier', command=CMD_Angier, width=14, height=3)
            Button_Angier.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Broadway = tk.Button(master=back, text='Broadway', command=CMD_Broadway, width=14, height=3)
            Button_Broadway.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Haywood(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chambers_Mtn = tk.Button(master=back, text='Chambers_Mtn', command=CMD_Chambers_Mtn, width=14, height=3)
            Button_Chambers_Mtn.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Hazel_Top = tk.Button(master=back, text='Hazel_Top', command=CMD_Hazel_Top, width=14, height=3)
            Button_Hazel_Top.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Henderson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bearwallow = tk.Button(master=back, text='Bearwallow', command=CMD_Bearwallow, width=14, height=3)
            Button_Bearwallow.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Corbin_Mtn = tk.Button(master=back, text='Corbin_Mtn', command=CMD_Corbin_Mtn, width=14, height=3)
            Button_Corbin_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Jumpoff_Mountain = tk.Button(master=back, text='Jumpoff_Mountain', command=CMD_Jumpoff_Mountain, width=14, height=3)
            Button_Jumpoff_Mountain.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Hertford(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Ahoskie = tk.Button(master=back, text='Ahoskie', command=CMD_Ahoskie, width=14, height=3)
            Button_Ahoskie.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Hoke(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_McCain_Hospital = tk.Button(master=back, text='McCain_Hospital', command=CMD_McCain_Hospital, width=14, height=3)
            Button_McCain_Hospital.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Hyde(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Engelhard = tk.Button(master=back, text='Engelhard', command=CMD_Engelhard, width=14, height=3)
            Button_Engelhard.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Ocracoke = tk.Button(master=back, text='Ocracoke', command=CMD_Ocracoke, width=14, height=3)
            Button_Ocracoke.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Ponzor = tk.Button(master=back, text='Ponzor', command=CMD_Ponzor, width=14, height=3)
            Button_Ponzor.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Rose_Bay = tk.Button(master=back, text='Rose_Bay', command=CMD_Rose_Bay, width=14, height=3)
            Button_Rose_Bay.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Iredell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Barium_Springs = tk.Button(master=back, text='Barium_Springs', command=CMD_Barium_Springs, width=14, height=3)
            Button_Barium_Springs.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Fox_Mtn = tk.Button(master=back, text='Fox_Mtn', command=CMD_Fox_Mtn, width=14, height=3)
            Button_Fox_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mooresville = tk.Button(master=back, text='Mooresville', command=CMD_Mooresville, width=14, height=3)
            Button_Mooresville.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Jackson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Toxaway_Mountain = tk.Button(master=back, text='Toxaway_Mountain', command=CMD_Toxaway_Mountain, width=14, height=3)
            Button_Toxaway_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Sylva_Jackson_Co_Airport = tk.Button(master=back, text='Sylva_Jackson_Co_Airport', command=CMD_Sylva_Jackson_Co_Airport, width=14, height=3)
            Button_Sylva_Jackson_Co_Airport.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Johnston(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Archers_Lodge = tk.Button(master=back, text='Archers_Lodge', command=CMD_Archers_Lodge, width=14, height=3)
            Button_Archers_Lodge.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Smithfield = tk.Button(master=back, text='Smithfield', command=CMD_Smithfield, width=14, height=3)
            Button_Smithfield.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Jones(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Comfort = tk.Button(master=back, text='Comfort', command=CMD_Comfort, width=14, height=3)
            Button_Comfort.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Lee(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Tramway = tk.Button(master=back, text='Tramway', command=CMD_Tramway, width=14, height=3)
            Button_Tramway.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Lenoir(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Kinston = tk.Button(master=back, text='Kinston', command=CMD_Kinston, width=14, height=3)
            Button_Kinston.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Seven_Springs = tk.Button(master=back, text='Seven_Springs', command=CMD_Seven_Springs, width=14, height=3)
            Button_Seven_Springs.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Lincoln(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lincolnton = tk.Button(master=back, text='Lincolnton', command=CMD_Lincolnton, width=14, height=3)
            Button_Lincolnton.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Macon(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Cowee_Bald = tk.Button(master=back, text='Cowee_Bald', command=CMD_Cowee_Bald, width=14, height=3)
            Button_Cowee_Bald.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Franklin_Water_Tower = tk.Button(master=back, text='Franklin_Water_Tower', command=CMD_Franklin_Water_Tower, width=14, height=3)
            Button_Franklin_Water_Tower.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Scaly_Mountain = tk.Button(master=back, text='Scaly_Mountain', command=CMD_Scaly_Mountain, width=14, height=3)
            Button_Scaly_Mountain.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wine_Springs = tk.Button(master=back, text='Wine_Springs', command=CMD_Wine_Springs, width=14, height=3)
            Button_Wine_Springs.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Madison(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Big_Knob = tk.Button(master=back, text='Big_Knob', command=CMD_Big_Knob, width=14, height=3)
            Button_Big_Knob.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Viking_Mtn = tk.Button(master=back, text='Viking_Mtn', command=CMD_Viking_Mtn, width=14, height=3)
            Button_Viking_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Hap_Mtn = tk.Button(master=back, text='Hap_Mtn', command=CMD_Hap_Mtn, width=14, height=3)
            Button_Hap_Mtn.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Martin(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Williamston = tk.Button(master=back, text='Williamston', command=CMD_Williamston, width=14, height=3)
            Button_Williamston.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_McDowell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Dobson_Knob = tk.Button(master=back, text='Dobson_Knob', command=CMD_Dobson_Knob, width=14, height=3)
            Button_Dobson_Knob.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Grants_Mountain = tk.Button(master=back, text='Grants_Mountain', command=CMD_Grants_Mountain, width=14, height=3)
            Button_Grants_Mountain.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Mecklenburg(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Heathway_Drive = tk.Button(master=back, text='Heathway_Drive', command=CMD_Heathway_Drive, width=14, height=3)
            Button_Heathway_Drive.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Huntersville = tk.Button(master=back, text='Huntersville', command=CMD_Huntersville, width=14, height=3)
            Button_Huntersville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Pineville = tk.Button(master=back, text='Pineville', command=CMD_Pineville, width=14, height=3)
            Button_Pineville.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Mitchell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Locust_Knob = tk.Button(master=back, text='Locust_Knob', command=CMD_Locust_Knob, width=14, height=3)
            Button_Locust_Knob.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Woodys_Knob = tk.Button(master=back, text='Woodys_Knob', command=CMD_Woodys_Knob, width=14, height=3)
            Button_Woodys_Knob.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Montgomery(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Biscoe = tk.Button(master=back, text='Biscoe', command=CMD_Biscoe, width=14, height=3)
            Button_Biscoe.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Buck_Mountain = tk.Button(master=back, text='Buck_Mountain', command=CMD_Buck_Mountain, width=14, height=3)
            Button_Buck_Mountain.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mount_Gilead_AAA = tk.Button(master=back, text='Mount_Gilead_AAA', command=CMD_Mount_Gilead_AAA, width=14, height=3)
            Button_Mount_Gilead_AAA.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Moore(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Carthage = tk.Button(master=back, text='Carthage', command=CMD_Carthage, width=14, height=3)
            Button_Carthage.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Southern_Pines = tk.Button(master=back, text='Southern_Pines', command=CMD_Southern_Pines, width=14, height=3)
            Button_Southern_Pines.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Nash(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Nash_DOC = tk.Button(master=back, text='Nash_DOC', command=CMD_Nash_DOC, width=14, height=3)
            Button_Nash_DOC.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Rocky_Mount = tk.Button(master=back, text='Rocky_Mount', command=CMD_Rocky_Mount, width=14, height=3)
            Button_Rocky_Mount.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_New_Hanover(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wilmington_Fredrickson_Rd = tk.Button(master=back, text='Wilmington_Fredrickson_Rd', command=CMD_Wilmington_Fredrickson_Rd, width=14, height=3)
            Button_Wilmington_Fredrickson_Rd.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Carolina_Beach = tk.Button(master=back, text='Carolina_Beach', command=CMD_Carolina_Beach, width=14, height=3)
            Button_Carolina_Beach.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Northampton(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Eniva_Roanoke_Rapids = tk.Button(master=back, text='Eniva_Roanoke_Rapids', command=CMD_Eniva_Roanoke_Rapids, width=14, height=3)
            Button_Eniva_Roanoke_Rapids.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Odom_DOC = tk.Button(master=back, text='Odom_DOC', command=CMD_Odom_DOC, width=14, height=3)
            Button_Odom_DOC.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Old_Mill = tk.Button(master=back, text='Old_Mill', command=CMD_Old_Mill, width=14, height=3)
            Button_Old_Mill.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Onslow(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Holly_Ridge = tk.Button(master=back, text='Holly_Ridge', command=CMD_Holly_Ridge, width=14, height=3)
            Button_Holly_Ridge.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Jacksonville = tk.Button(master=back, text='Jacksonville', command=CMD_Jacksonville, width=14, height=3)
            Button_Jacksonville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Orange(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chapel_Hill = tk.Button(master=back, text='Chapel_Hill', command=CMD_Chapel_Hill, width=14, height=3)
            Button_Chapel_Hill.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Eno_Mtn = tk.Button(master=back, text='Eno_Mtn', command=CMD_Eno_Mtn, width=14, height=3)
            Button_Eno_Mtn.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Laws = tk.Button(master=back, text='Laws', command=CMD_Laws, width=14, height=3)
            Button_Laws.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Pamlico(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bayboro = tk.Button(master=back, text='Bayboro', command=CMD_Bayboro, width=14, height=3)
            Button_Bayboro.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Pasquotank(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Elizabeth_City = tk.Button(master=back, text='Elizabeth_City', command=CMD_Elizabeth_City, width=14, height=3)
            Button_Elizabeth_City.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Pender(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Burgaw = tk.Button(master=back, text='Burgaw', command=CMD_Burgaw, width=14, height=3)
            Button_Burgaw.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Penderlea = tk.Button(master=back, text='Penderlea', command=CMD_Penderlea, width=14, height=3)
            Button_Penderlea.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Scotts_Hill = tk.Button(master=back, text='Scotts_Hill', command=CMD_Scotts_Hill, width=14, height=3)
            Button_Scotts_Hill.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Perquimans(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Winfall = tk.Button(master=back, text='Winfall', command=CMD_Winfall, width=14, height=3)
            Button_Winfall.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Person(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Roxboro_1 = tk.Button(master=back, text='Roxboro_1', command=CMD_Roxboro_1, width=14, height=3)
            Button_Roxboro_1.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Roxboro_2 = tk.Button(master=back, text='Roxboro_2', command=CMD_Roxboro_2, width=14, height=3)
            Button_Roxboro_2.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mt_Tirzah = tk.Button(master=back, text='Mt_Tirzah', command=CMD_Mt_Tirzah, width=14, height=3)
            Button_Mt_Tirzah.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Pitt(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Greenville = tk.Button(master=back, text='Greenville', command=CMD_Greenville, width=14, height=3)
            Button_Greenville.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Polk(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Tryon_Pk = tk.Button(master=back, text='Tryon_Pk', command=CMD_Tryon_Pk, width=14, height=3)
            Button_Tryon_Pk.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Randolph(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Asheboro_DOT = tk.Button(master=back, text='Asheboro_DOT', command=CMD_Asheboro_DOT, width=14, height=3)
            Button_Asheboro_DOT.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Coleridge_AAA = tk.Button(master=back, text='Coleridge_AAA', command=CMD_Coleridge_AAA, width=14, height=3)
            Button_Coleridge_AAA.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Shepherd_Mountain = tk.Button(master=back, text='Shepherd_Mountain', command=CMD_Shepherd_Mountain, width=14, height=3)
            Button_Shepherd_Mountain.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Staley = tk.Button(master=back, text='Staley', command=CMD_Staley, width=14, height=3)
            Button_Staley.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Richmond(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Ellerbe = tk.Button(master=back, text='Ellerbe', command=CMD_Ellerbe, width=14, height=3)
            Button_Ellerbe.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Hamlet = tk.Button(master=back, text='Hamlet', command=CMD_Hamlet, width=14, height=3)
            Button_Hamlet.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Rockingham_DOT = tk.Button(master=back, text='Rockingham_DOT', command=CMD_Rockingham_DOT, width=14, height=3)
            Button_Rockingham_DOT.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Robeson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lumberton_UNCTV = tk.Button(master=back, text='Lumberton_UNCTV', command=CMD_Lumberton_UNCTV, width=14, height=3)
            Button_Lumberton_UNCTV.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Proctorville = tk.Button(master=back, text='Proctorville', command=CMD_Proctorville, width=14, height=3)
            Button_Proctorville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Rockingham(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Eden = tk.Button(master=back, text='Eden', command=CMD_Eden, width=14, height=3)
            Button_Eden.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mayodan = tk.Button(master=back, text='Mayodan', command=CMD_Mayodan, width=14, height=3)
            Button_Mayodan.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Reidsville = tk.Button(master=back, text='Reidsville', command=CMD_Reidsville, width=14, height=3)
            Button_Reidsville.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wentworth = tk.Button(master=back, text='Wentworth', command=CMD_Wentworth, width=14, height=3)
            Button_Wentworth.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Rowan(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Faith_Mtn = tk.Button(master=back, text='Faith_Mtn', command=CMD_Faith_Mtn, width=14, height=3)
            Button_Faith_Mtn.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Salisbury = tk.Button(master=back, text='Salisbury', command=CMD_Salisbury, width=14, height=3)
            Button_Salisbury.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Rutherford(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chimney_Rock = tk.Button(master=back, text='Chimney_Rock', command=CMD_Chimney_Rock, width=14, height=3)
            Button_Chimney_Rock.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Spindale = tk.Button(master=back, text='Spindale', command=CMD_Spindale, width=14, height=3)
            Button_Spindale.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Sampson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Newton_Grove = tk.Button(master=back, text='Newton_Grove', command=CMD_Newton_Grove, width=14, height=3)
            Button_Newton_Grove.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Salemburg = tk.Button(master=back, text='Salemburg', command=CMD_Salemburg, width=14, height=3)
            Button_Salemburg.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Taylors_Bridge = tk.Button(master=back, text='Taylors_Bridge', command=CMD_Taylors_Bridge, width=14, height=3)
            Button_Taylors_Bridge.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Scotland(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Laurinburg_PE = tk.Button(master=back, text='Laurinburg_PE', command=CMD_Laurinburg_PE, width=14, height=3)
            Button_Laurinburg_PE.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Albemarle = tk.Button(master=back, text='Albemarle', command=CMD_Albemarle, width=14, height=3)
            Button_Albemarle.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lambert = tk.Button(master=back, text='Lambert', command=CMD_Lambert, width=14, height=3)
            Button_Lambert.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Stanly(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Albemarle = tk.Button(master=back, text='Albemarle', command=CMD_Albemarle, width=14, height=3)
            Button_Albemarle.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lambert = tk.Button(master=back, text='Lambert', command=CMD_Lambert, width=14, height=3)
            Button_Lambert.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Stokes(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Booth_Mountain = tk.Button(master=back, text='Booth_Mountain', command=CMD_Booth_Mountain, width=14, height=3)
            Button_Booth_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Sandy_Ridge = tk.Button(master=back, text='Sandy_Ridge', command=CMD_Sandy_Ridge, width=14, height=3)
            Button_Sandy_Ridge.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Sauratown_Mtn = tk.Button(master=back, text='Sauratown_Mtn', command=CMD_Sauratown_Mtn, width=14, height=3)
            Button_Sauratown_Mtn.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Surry(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Chestnut_Ridge = tk.Button(master=back, text='Chestnut_Ridge', command=CMD_Chestnut_Ridge, width=14, height=3)
            Button_Chestnut_Ridge.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Elkin_DOT = tk.Button(master=back, text='Elkin_DOT', command=CMD_Elkin_DOT, width=14, height=3)
            Button_Elkin_DOT.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Fishers_Peak = tk.Button(master=back, text='Fishers_Peak', command=CMD_Fishers_Peak, width=14, height=3)
            Button_Fishers_Peak.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Turner_Mtn = tk.Button(master=back, text='Turner_Mtn', command=CMD_Turner_Mtn, width=14, height=3)
            Button_Turner_Mtn.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Swain(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Frye_Mountain = tk.Button(master=back, text='Frye_Mountain', command=CMD_Frye_Mountain, width=14, height=3)
            Button_Frye_Mountain.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Mt_Noble = tk.Button(master=back, text='Mt_Noble', command=CMD_Mt_Noble, width=14, height=3)
            Button_Mt_Noble.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Transylvania(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Brevard = tk.Button(master=back, text='Brevard', command=CMD_Brevard, width=14, height=3)
            Button_Brevard.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Tyrrell(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Columbia = tk.Button(master=back, text='Columbia', command=CMD_Columbia, width=14, height=3)
            Button_Columbia.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Union(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Fairview = tk.Button(master=back, text='Fairview', command=CMD_Fairview, width=14, height=3)
            Button_Fairview.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Monroe = tk.Button(master=back, text='Monroe', command=CMD_Monroe, width=14, height=3)
            Button_Monroe.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Waxhaw_AAA = tk.Button(master=back, text='Waxhaw_AAA', command=CMD_Waxhaw_AAA, width=14, height=3)
            Button_Waxhaw_AAA.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wingate = tk.Button(master=back, text='Wingate', command=CMD_Wingate, width=14, height=3)
            Button_Wingate.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Vance(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Oxford_Bi_Com = tk.Button(master=back, text='Oxford_Bi_Com', command=CMD_Oxford_Bi_Com, width=14, height=3)
            Button_Oxford_Bi_Com.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Wake(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Archdale_Building = tk.Button(master=back, text='Archdale_Building', command=CMD_Archdale_Building, width=14, height=3)
            Button_Archdale_Building.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_West_Raleigh_SHP_C_and_L = tk.Button(master=back, text='West_Raleigh_SHP_C_and_L', command=CMD_West_Raleigh_SHP_C_and_L, width=14, height=3)
            Button_West_Raleigh_SHP_C_and_L.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_NCSHP_Training_Center = tk.Button(master=back, text='NCSHP_Training_Center', command=CMD_NCSHP_Training_Center, width=14, height=3)
            Button_NCSHP_Training_Center.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wendell_AAA = tk.Button(master=back, text='Wendell_AAA', command=CMD_Wendell_AAA, width=14, height=3)
            Button_Wendell_AAA.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wake_North_Durant = tk.Button(master=back, text='Wake_North_Durant', command=CMD_Wake_North_Durant, width=14, height=3)
            Button_Wake_North_Durant.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wake_South_Holly_Springs = tk.Button(master=back, text='Wake_South_Holly_Springs', command=CMD_Wake_South_Holly_Springs, width=14, height=3)
            Button_Wake_South_Holly_Springs.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Warren(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Manson = tk.Button(master=back, text='Manson', command=CMD_Manson, width=14, height=3)
            Button_Manson.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Warrenton_VTN = tk.Button(master=back, text='Warrenton_VTN', command=CMD_Warrenton_VTN, width=14, height=3)
            Button_Warrenton_VTN.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Washington(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Plymouth = tk.Button(master=back, text='Plymouth', command=CMD_Plymouth, width=14, height=3)
            Button_Plymouth.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Watauga(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Boone = tk.Button(master=back, text='Boone', command=CMD_Boone, width=14, height=3)
            Button_Boone.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Buckeye_Knob = tk.Button(master=back, text='Buckeye_Knob', command=CMD_Buckeye_Knob, width=14, height=3)
            Button_Buckeye_Knob.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Wayne(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Lee_Plant_PE = tk.Button(master=back, text='Lee_Plant_PE', command=CMD_Lee_Plant_PE, width=14, height=3)
            Button_Lee_Plant_PE.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Wilkes(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Pores_Knob = tk.Button(master=back, text='Pores_Knob', command=CMD_Pores_Knob, width=14, height=3)
            Button_Pores_Knob.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Wilson(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Bailey = tk.Button(master=back, text='Bailey', command=CMD_Bailey, width=14, height=3)
            Button_Bailey.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Wilson = tk.Button(master=back, text='Wilson', command=CMD_Wilson, width=14, height=3)
            Button_Wilson.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Yadkin(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Yadkin_Rest_Area_I77 = tk.Button(master=back, text='Yadkin_Rest_Area_I77', command=CMD_Yadkin_Rest_Area_I77, width=14, height=3)
            Button_Yadkin_Rest_Area_I77.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Yadkinville = tk.Button(master=back, text='Yadkinville', command=CMD_Yadkinville, width=14, height=3)
            Button_Yadkinville.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
    def Menu_Yancey(self):
            self.mw.destroy() 
            self.mw = tk.Tk()
            #Specify the attributes for all widgets simply like this.
            self.mw.option_add("*Button.Background", "Teal")
            self.mw.option_add("*Button.Foreground", "White")
            self.mw.title('OP25 Repeater Selector GUI')
            #You can set the geometry attribute to change the root windows size
            self.mw.geometry("800x420") #You want the size of the app to be 750 X 562.5 Pixels (Slightky Smaller than the RPI 7" Touch Screens)
            self.mw.resizable(0, 0) #Don't allow resizing in the x or y direction
            back = tk.Frame(master=self.mw,bg='Grey')
            back.pack_propagate(0) #Don't allow the widgets inside to determine the frame's width / height
            back.pack(fill=tk.BOTH, expand=1) #Expand the frame to fill the root window
            #Buttons
            Stop_OP25 = tk.Button(master=back, text='Stop OP25 Instances', command=stopall, width=14, height=3)
            Stop_OP25.grid(row=0, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToFavorites_OP25 = tk.Button(master=back, text='Go To Favorites', command=self.Favorites, width=14, height=3)
            GoToFavorites_OP25.grid(row=0, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            GoToNCCounties_OP25 = tk.Button(master=back, text='Go To NC Counties', command=self.NC_Counties_Home, width=14, height=3)
            GoToNCCounties_OP25.grid(row=0, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_Clingmans_Peak = tk.Button(master=back, text='Clingmans_Peak', command=CMD_Clingmans_Peak, width=14, height=3)
            Button_Clingmans_Peak.grid(row=1, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=1, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=2, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=3, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=1, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=2, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=3, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=4, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            Button_ = tk.Button(master=back, text='', command='', width=14, height=3)
            Button_.grid(row=4, column=5, sticky=tk.W+tk.E+tk.N+tk.S, padx=9, pady=5)
            self.mw.mainloop()
if __name__ == '__main__':
    OP25_GUI().mw.mainloop()
